<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerCommandTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>